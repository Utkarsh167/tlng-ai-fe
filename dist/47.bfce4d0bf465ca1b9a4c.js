(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{"M+39":function(n,e){n.exports='@charset "UTF-8";\n.flex_row {\n  display: flex;\n  margin: 0 -10px;\n  align-items: center;\n}\n.breadcrumb {\n  width: 100%;\n}\n.breadcrumb li {\n  display: inline-block;\n}\n.breadcrumb li a {\n  color: #006CB8;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n}\n.breadcrumb li a:before {\n  padding: 0 5px;\n  color: #B7BEC1;\n  content: "/ ";\n}\n.breadcrumb li a:after {\n  content: "/\xa0";\n  padding: 0 2px;\n  color: #A2ABAE;\n}\n.breadcrumb li a.active {\n  color: #262c2d;\n  cursor: default;\n}\n.breadcrumb li a.active:after {\n  display: none;\n}\n.breadcrumb li:first-child a:before, .breadcrumb li:first-child a:after {\n  display: none;\n}\n.breadcrumb li:last-child a:before, .breadcrumb li:last-child a:after {\n  display: none;\n}\n.white_wrapper.action {\n  overflow: inherit !important;\n  position: relative;\n}\n.actionmenu {\n  margin-top: 10px;\n  z-index: 9999;\n  border: 1px solid #e0e0e0;\n  position: absolute;\n  background: #fff;\n  top: 30px;\n  right: 0px;\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);\n}\n.actionmenu li {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  position: relative;\n  flex-direction: row;\n}\n.actionmenu li input {\n  width: 100%;\n}\n.csv-product {\n  background: transparent !important;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d !important;\n  width: 100%;\n  justify-content: flex-start;\n  display: flex;\n  font-family: "Segoe UI";\n  font-size: 13px;\n  position: relative;\n}\n.csv-product .mat-button-wrapper {\n  margin: 0;\n}\n.csv-product button {\n  background: transparent !important;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d !important;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  font-family: "Segoe UI";\n  font-size: 13px;\n}\n.csv-product button .material-icons {\n  font-size: 19px;\n}\n.csv-product.upload input {\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.uploadcsv {\n  background: transparent;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d;\n  position: relative;\n  border-bottom: 1px solid #e0e0e0;\n}\n.uploadcsv input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.rowFilterBox {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\napp-search-filter {\n  width: 60%;\n}\n.uploadData {\n  text-align: center;\n}\n.uploadData label {\n  font-size: 13px;\n}\n.uploadData img {\n  width: 15px;\n  height: 15px;\n}\n:host ::ng-deep .csv-product .mat-button-wrapper {\n  margin: 0;\n}\n:host ::ng-deep .csv-product button .material-icons {\n  font-size: 19px;\n}\n:host ::ng-deep .csv-product .material-icons {\n  font-size: 19px;\n}\n:host ::ng-deep .searchWrapper {\n  width: 100% !important;\n}\n:host ::ng-deep .btn_wrapper li {\n  padding: 0;\n}\n:host ::ng-deep .btn_wrapper li.action button.mat-raised-button.mat-primary {\n  background-color: transparent;\n  color: #333;\n  border: 1px solid #c0c2c2;\n  box-shadow: 2px 5px 4px -2px inset #b8b8b880;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li button {\n  transition: all 0.5s ease;\n  -webkit-transition: all 0.5s ease;\n  -moz-transition: all 0.5s ease;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li button.mat-raised-button.mat-primary {\n  box-shadow: none;\n  border: 0;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li:hover {\n  background: #e8e8e8 !important;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li:first-child button.mat-raised-button.mat-primary {\n  border-bottom: 1px solid #e0e0e0;\n}\n:host ::ng-deep .mat-menu-content {\n  height: auto;\n}\nbutton.action_menu {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  outline: 0;\n  min-width: 64px;\n  line-height: 36px;\n  padding: 0 16px;\n  border-radius: 4px;\n  overflow: visible;\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n  transition: background 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: transparent;\n  color: #333;\n  border: 1px solid #c0c2c2;\n  box-shadow: 2px 5px 4px -2px inset #b8b8b880;\n  display: flex;\n  align-items: center;\n}\nbutton.action_menu .mat-icon {\n  position: relative;\n  right: 10px;\n}\n.complete-align {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n.text-muted {\n  color: #7a7878 !important;\n}\n.col-2 {\n  padding-left: 0 !important;\n}'},QJ97:function(n,e){n.exports='\x3c!-- <div class="white_wrapper action">\n  <div class="flex_row">\n    <ul class="breadcrumb">\n      <li>\n        <a routerLink="/admin/employees/list">Employee /&nbsp;</a>\n      </li>\n      <li>\n        <a href="javascript:void(0)" class="active">Blocked</a>\n      </li>\n    </ul>\n  </div>\n</div>\n\n<div class="white_wrapper">\n  <table\n    mat-table\n    [dataSource]="employees"\n    matSort\n    (matSortChange)="sortData($event)"\n    class="mat-elevation-z8"\n  >\n    <ng-container matColumnDef="position">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef="let element; let i = index">\n        {{ getSerialNumber(i + 1) }}\n      </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef="empId">\n      <th mat-header-cell *matHeaderCellDef>Employee ID</th>\n      <td mat-cell *matCellDef="let element">\n        <span class="td-text-wrap">{{ element.employeeId | checkNull }}</span>\n      </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef="name">\n      <th mat-header-cell *matHeaderCellDef>Full Name</th>\n      <td mat-cell *matCellDef="let element">\n          {{ element.name|checkNull }}\n\n      </td>\n    </ng-container>\n\n    \n\n    <ng-container matColumnDef="email">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef="let element" title="{{ element.email }}">\n        <span>{{ element.email | checkNull }}</span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef="created">\n      <th mat-header-cell *matHeaderCellDef>\n        <span\n          [ngClass]="\n            isFilterApplied && filterForm.value.fromDate ? \'appliedFilter\' : \'\'\n          "\n          >Registration Date\n        </span>\n      </th>\n      <td mat-cell *matCellDef="let element">\n        <span matTooltip="Filters applied" matTooltipPosition="below">{{\n          element.created | customDate\n        }}</span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef="action">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef="let element">\n        <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu="matMenu" xPosition="before">\n          \n          <button\n            mat-menu-item\n            [ngClass]="element.status === \'blocked\' ? \'ban\' : \'noban\'"\n            (click)="\n              changeStatus(\n                element.status === \'blocked\' ? \'unblocked\' : \'blocked\',\n                element._id\n              )\n            "\n          >\n            <mat-icon\n              matTooltip="{{\n                element.status === \'blocked\' ? \'Unblock\' : \'Block\'\n              }}"\n            >\n              {{ element.status === "blocked" ? "block" : "block" }}</mat-icon\n            >\n            {{ element.status === "blocked" ? "un-block" : "Block" }}\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n  </table>\n  <div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n  </div>\n  <div class="white_wrapper" *ngIf="employees.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n      (page)="changePage($event)">\n    </mat-paginator>\n  </div>\n</div> --\x3e\n<div class="main-content complete-align">\n  <div class="row">\n    <div class="col-12 col-lg-6 col-xl">\n      <ul class="breadcrumb">\n        <li>\n          <a href="#/admin/dashboard">Home</a>\n        </li>\n        <li>\n          <a href="#/admin/employees/list">Employee</a>\n        </li>\n        <li>\n          <a href="javascript:void(0)" class="active">Blocked</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 2%">\n    <div class="col-12 col-lg-6 col-xl">\n        <label  style="font-size: 25px !important;font-weight: 100 !important;">\n          Blocked Employees\n        </label>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 2%">\n    <div class="col-12 col-lg-6 col-xl">\n\n      <div _ngcontent-vmx-c9="" class="white-card" style="padding-top: 2%;">\n        <table\n        mat-table\n        [dataSource]="employees"\n        matSort\n        (matSortChange)="sortData($event)"\n        class="mat-elevation-z8"\n      >\n        <ng-container matColumnDef="position">\n          <th mat-header-cell *matHeaderCellDef>#</th>\n          <td mat-cell *matCellDef="let element; let i = index">\n            {{ getSerialNumber(i + 1) }}\n          </td>\n        </ng-container>\n    \n    \n        <ng-container matColumnDef="empId">\n          <th mat-header-cell *matHeaderCellDef>EMPLOYEE ID</th>\n          <td mat-cell *matCellDef="let element">\n            <span class="td-text-wrap">{{ element.employeeId | checkNull }}</span>\n          </td>\n        </ng-container>\n    \n    \n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef>NAME</th>\n          <td mat-cell *matCellDef="let element">\n              {{ element.name|checkNull }}\n    \n          </td>\n        </ng-container>\n    \n        \n    \n        <ng-container matColumnDef="email">\n          <th mat-header-cell *matHeaderCellDef>EMAIL</th>\n          <td mat-cell *matCellDef="let element" title="{{ element.email }}">\n            <span class="td-text-wrap">{{ element.email | checkNull }}</span>\n          </td>\n        </ng-container>\n    \n        <ng-container matColumnDef="created">\n          <th mat-header-cell *matHeaderCellDef>\n            <span \n              [ngClass]="\n                isFilterApplied && filterForm.value.fromDate ? \'appliedFilter\' : \'\'\n              "\n              >REGISTRATION DATE\n            </span>\n          </th>\n          <td mat-cell *matCellDef="let element">\n            <span class="td-text-wrap" matTooltip="Filters applied" matTooltipPosition="below">{{\n              element.created | customDate\n            }}</span>\n          </td>\n        </ng-container>\n    \n        <ng-container matColumnDef="action">\n          <th mat-header-cell *matHeaderCellDef>ACTION</th>\n          <td mat-cell *matCellDef="let element">\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu" xPosition="before">\n              \n              <button\n                mat-menu-item\n                [ngClass]="element.status === \'blocked\' ? \'ban\' : \'noban\'"\n                (click)="\n                  changeStatus(\n                    element.status === \'blocked\' ? \'unblocked\' : \'blocked\',\n                    element._id\n                  )\n                "\n              >\n                <mat-icon\n                  matTooltip="{{\n                    element.status === \'blocked\' ? \'Unblock\' : \'Block\'\n                  }}"\n                >\n                  {{ element.status === "blocked" ? "block" : "block" }}</mat-icon\n                >\n                {{ element.status === "blocked" ? "un-block" : "Block" }}\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n      </table>\n      </div>\n  \n    <div class="white_wrapper" *ngIf="total === 0">\n      <h2 class="not-found">No Employee Found</h2>\n    </div>\n    <div class="white_wrapper" *ngIf="employees.data.length">\n      <mat-paginator [length]="total" [pageIndex]="page - 1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n        (page)="changePage($event)">\n      </mat-paginator>\n    </div>\n  </div>\n  </div>\n</div>'},xabm:function(n,e,t){"use strict";t.r(e);var a=t("mrSG"),o=t("CcnG"),l=t("Ip0R"),i=t("RzZf"),r=t("BHnd"),s=t("FTgb"),c=t("jRgp"),m=t("vblm"),p=t("iiAa"),d=function(){function n(n,e){this._http=n,this._utilityService=e}return n.prototype.getArchivedEmployees=function(n){return this._http.get(c.ab,n)},n.prototype.changeStatus=function(n){return a.__awaiter(this,void 0,void 0,function(){var e,t,o,l;return a.__generator(this,function(a){switch(a.label){case 0:return a.trys.push([0,5,,6]),e=n.status.toUpperCase(),t={message:m.b[e].confirm("Employee")},[4,this._utilityService.openDialog(t).toPromise()];case 1:return a.sent()?[4,o="DELETED"===e?this._http.delete(c.Y+n.userId).toPromise():this._http.post(c.h+n.userId,{status:n.status}).toPromise()]:[3,3];case 2:return a.sent(),this._utilityService.showAlert(m.b[e].success("Employee")),[2,Promise.resolve(o)];case 3:return[2,Promise.resolve(null)];case 4:return[3,6];case 5:return l=a.sent(),[2,Promise.reject(l)];case 6:return[2]}})})},n.ctorParameters=function(){return[{type:s.a},{type:p.a}]},n=a.__decorate([Object(o.Injectable)({providedIn:"root"}),a.__metadata("design:paramtypes",[s.a,p.a])],n)}(),u=function(n){function e(e){var t=n.call(this)||this;return t._archiveService=e,t.displayedColumns=["position","empId","name","email","created","action"],t.employees=new r.a([]),t.appliedFilterCount=0,t.isFilterApplied=!1,t.csvFileName="",t.shifts=[],t.menu=!1,t}return a.__extends(e,n),e.prototype.ngOnInit=function(){this.getArchivedEmployees()},e.prototype.getArchivedEmployees=function(){var n=this,e=a.__assign({},this.validPageOptions,{userType:1,requestedPage:"blocked"});this._archiveService.getArchivedEmployees(e).subscribe(function(e){n.employees.data=e.data.userList,n.total=e.data.totalCount},function(n){})},e.prototype.sortData=function(n){this.sortOptions=n,this.resetPages(),this.getArchivedEmployees()},e.prototype.changePage=function(n){this.pageOptionsOnChange=n,0!=this.total&&this.getArchivedEmployees()},e.prototype.changeStatus=function(n,e){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this._archiveService.changeStatus({status:n,userId:e})];case 1:return t.sent()&&this.getArchivedEmployees(),[3,3];case 2:return t.sent(),[3,3];case 3:return[2]}})})},e.ctorParameters=function(){return[{type:d}]},a.__decorate([Object(o.ViewChild)("upload_csv",{static:!1}),a.__metadata("design:type",o.ElementRef)],e.prototype,"myInputVariable",void 0),e=a.__decorate([Object(o.Component)({selector:"app-employee-archive",template:t("QJ97"),styles:[t("M+39")]}),a.__metadata("design:paramtypes",[d])],e)}(i.a),h=t("ZYCi"),b=t("UodH"),g=t("seP3"),f=t("SMsm"),v=t("b716"),x=t("mVsa"),w=t("4epT"),y=t("uGex"),C=t("OkvK"),D=t("v9Dh"),_=t("9sDP"),k=t("faKS"),S=t("gdGC"),E=t("jLZc");t.d(e,"EmployeeArchiveModule",function(){return A});var I=[{path:"",component:u}],z=[g.c,v.b,b.a,r.b,f.a,w.a,C.a,x.a,D.a,y.a],A=function(){function n(){}return n=a.__decorate([Object(o.NgModule)({declarations:[u],imports:[l.c,h.e.forChild(I)].concat(z,[_.a,k.a,S.a,E.a]),providers:[d]})],n)}()}}]);
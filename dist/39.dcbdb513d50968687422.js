(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{JeUN:function(e,n,t){"use strict";t.r(n);var a=t("mrSG"),l=t("Cllz"),o=t("CcnG"),i=t("Ip0R"),r=t("ZYCi"),s=t("RzZf"),c=t("buKM"),d=t("gIcY"),m=t("FTgb"),p=t("iiAa"),u=t("jRgp"),f=t("vblm"),h=t("67Y/"),v=t("9Z1F"),g=t("XlPw"),b=function(){function e(e,n,t,a){this._formService=e,this._formBuilder=n,this._http=t,this._utilityService=a,this.locationsData=[]}return e.prototype.getFilterForm=function(){return this._formBuilder.group(this._formService.getFilterFormControls(["fromDate","toDate","userType","requestedPage","status","compLocationName"]))},e.prototype.createModalForm=function(){return this._formBuilder.group({employeeId:this._formService.getControl("alphaNumeric"),vehicleType:this._formService.getControl("dropdown"),name:this._formService.getControl("name"),mobile:this._formService.getControl("phoneManual"),guestValidity:this._formService.getControl("date"),reason:this._formService.getControl("name"),regNo:this._formService.getControl("alphaNumeric"),modal:this._formService.getControl("name")})},e.prototype.getDrivers=function(e){return this._http.get(u.z,e)},e.prototype.getPermission=function(){return localStorage.getItem("adminPermission")},e.prototype.createFilterObject=function(e){return{registrationDate:{label:"Registration Date",fromDate:e.controls.fromDate,toDate:e.controls.toDate},userType:{label:"User Type",list:[{viewValue:"Guest",value:1},{viewValue:"Employee",value:2}],control:e.controls.userType},requestedPage:{label:"Entry Type",list:[{viewValue:"Automatic",value:"automatic"},{viewValue:"Manual",value:"manual"}],control:e.controls.requestedPage},status:{label:"Status",list:[{viewValue:"Blacklisted",value:"blocked"},{viewValue:"Whitelisted",value:"unblocked"}],control:e.controls.status},compLocationName:{label:"Building",list:JSON.parse(localStorage.getItem("buildings")),control:e.controls.compLocationName}}},e.prototype.openDailog=function(){},e.prototype.changeStatus=function(e){return a.__awaiter(this,void 0,void 0,function(){var n,t,l,o;return a.__generator(this,function(a){switch(a.label){case 0:return a.trys.push([0,5,,6]),n=e.status.toUpperCase(),t={message:f.b[n].confirm("Driver")},[4,this._utilityService.openDialog(t).toPromise()];case 1:return a.sent()?[4,l="DELETED"===n?this._http.delete(u.Y+e.userId).toPromise():this._http.post(u.h+e.userId,{status:e.status}).toPromise()]:[3,3];case 2:return a.sent(),this._utilityService.showAlert(f.b[n].success("Driver")),[2,Promise.resolve(l)];case 3:return[2,Promise.resolve(null)];case 4:return[3,6];case 5:return o=a.sent(),[2,Promise.reject(o)];case 6:return[2]}})})},e.prototype.uploadFile=function(e){var n=this,t=new FormData;t.append("file",e);return this._http.post(u.v,t).pipe(Object(h.a)(function(e){return n._utilityService.showAlert(f.b.UPLOADED("File")),e}),Object(v.a)(function(e){return Object(g.a)(e)}))},e.prototype.getLocations=function(){var e=this;return this.locationsData=[],this._http.get(u.E).subscribe(function(n){e.buildings=n.data.locations,e.buildings.forEach(function(n){e.locationsData.push({viewValue:n.name,value:n.name})})})},e.prototype.addManualEntry=function(e){return this._http.post(u.B,e)},e.prototype.getEmployees=function(e){return this._http.get(u.ab,e)},e.ctorParameters=function(){return[{type:c.a},{type:d.d},{type:m.a},{type:p.a}]},e=a.__decorate([Object(o.Injectable)(),a.__metadata("design:paramtypes",[c.a,d.d,m.a,p.a])],e)}(),y=t("BHnd"),_=t("o3x0"),x=t("yG5I"),w=t("Oy5v"),D=function(e){function n(n,t,a,l,o){var i=e.call(this)||this;return i.service=n,i._router=t,i._utilityService=a,i.dialogRef=l,i.data=o,i.socketEvents=x.o,i.carType=x.a,i.datas=o,i}return a.__extends(n,e),n.prototype.ngOnInit=function(){this.minDate=new Date,this.createForm(),this.display()},n.prototype.createForm=function(){this.modalForm=this.service.createModalForm()},n.prototype.getControl=function(e){return this.modalForm.controls[e]},n.prototype.display=function(){document.getElementById("regNo");var e=document.getElementById("form"),n=document.getElementById("done"),t=document.getElementById("cancel");this.datas.data.event==x.o[0].value?n.style.display="block":this.datas.data.event==x.o[1].value?t.style.display="block":this.datas.data.event==x.o[2].value?n.style.display="block":this.datas.data.event==x.o[3].value?t.style.display="block":this.datas.data.event==x.o[4].value?t.style.display="block":this.datas.data.event==x.o[5].value&&(e.style.display="block")},n.prototype.radioChange=function(e){var n=document.getElementById("guest"),t=document.getElementById("employee");this.selectedTab=e.value,"guest"==e.value?(n.style.display="block",t.style.display="none"):(n.style.display="none",t.style.display="block")},n.prototype.addManualEntry=function(){var e=this;if(this._router.navigate([w.DRIVER]),this.modalForm.value.companyLocationName=localStorage.getItem("companyLocationName"),console.log(this.selectedTab),this.modalForm.value.regNo=this.datas.data.data.regNo,"employee"==this.selectedTab){if(this.modalForm.value.userId=this.userId,this.modalForm.controls.employeeId.invalid)return void this._utilityService.showAlert("Employee id is mandatory");this.modalForm.controls.vehicleType.invalid&&delete this.modalForm.value.vehicleType}else{if(""!=this.modalForm.controls.mobile.value&&this.modalForm.controls.mobile.invalid)return void this._utilityService.showAlert("Only Numbers are allowed");if(""!=this.modalForm.controls.name.value&&this.modalForm.controls.name.invalid)return void this._utilityService.showAlert("Name must contain only alphabets");this.modalForm.controls.vehicleType.invalid&&delete this.modalForm.value.vehicleType,this.modalForm.value.validity=this.modalForm.value.guestValidity}console.log(this.data),console.log(this.modalForm.value);var n=a.__assign({},this.data.data.data,this.modalForm.value);console.log(n),this.service.addManualEntry(n).subscribe(function(n){e._utilityService.showAlert(n.message),e.dialogRef.close()},function(n){e._utilityService.showAlert(n.error.error)})},n.prototype.searchEmp=function(e){this.search=e,this.resetPages(),this.getEmployees()},n.prototype.getData=function(e){console.log(e),console.log(this.userId)},n.prototype.getEmployees=function(){var e=this,n=a.__assign({},this.changeDateFormat(this.modalForm.value),this.validPageOptions,{limit:10});console.log(n),this.service.getEmployees(n).subscribe(function(n){e.employeeSearchData=n.data.userList,console.log(e.employeeSearchData),e.employeeSearchData.length>0?(e.userId=e.employeeSearchData[0]._id,e.empName=e.employeeSearchData[0].name):(e.userId=null,e.empName="")},function(e){})},n.ctorParameters=function(){return[{type:b},{type:r.d},{type:p.a},{type:_.d},{type:void 0,decorators:[{type:o.Inject,args:[_.a]}]}]},n=a.__decorate([Object(o.Component)({selector:"app-dialog",template:t("MaPH"),styles:[t("p7x7")]}),a.__param(4,Object(o.Inject)(_.a)),a.__metadata("design:paramtypes",[b,r.d,p.a,_.d,Object])],n)}(s.a),C=t("xG9w"),I=t("8H0n"),k=function(e){function n(n,t,a,l,o,i){var r=e.call(this)||this;return r._driverListService=n,r._utilityService=t,r._elementRef=a,r.dialog=l,r._socket=o,r._router=i,r.displayedColumns=["position","numPlate","userName","userType","inTime","outTime","type","modal","entryType","companyLocationName","status","event","ocr","action"],r.entryLogs=new y.a([]),r.appliedFilterCount=0,r.isFilterApplied=!1,r.csvFileName="",r.menu=!1,r.createFilterForm(),r.filterObject=r._driverListService.createFilterObject(r.filterForm),r}return a.__extends(n,e),n.prototype.ngOnInit=function(){this.permission=this._driverListService.getPermission(),'["guard"]'==this.permission?this.isAudit=!0:this.isAudit=!1,this.getDrivers(),this._driverListService.getLocations(),this.initSocket()},n.prototype.initSocket=function(){this._socket.initialiseSocket(!0),this.getSocketTestData()},n.prototype.getSocketTestData=function(){var e=this;this._socket.getTestData().subscribe(function(n){e.dialogRef&&e.dialog.closeAll(),console.log(n),setTimeout(function(){e.openMapDialog(n),e._socket.initialiseSocket(!1)},500)})},n.prototype.unSubscribeSocket=function(){this._socket.onClose()},n.prototype.createFilterForm=function(){this.filterForm=this._driverListService.getFilterForm()},n.prototype.openMapDialog=function(e){var n=this,t="500px";e.event==x.o[5].value&&(t="600px"),this.dialogRef=this.dialog.open(D,{width:"600px",height:t,data:{data:e}}),e.hidden&&setTimeout(function(){n.dialogRef.close()},5e3),this.dialogRef.afterClosed().subscribe(function(e){n.permission=n._driverListService.getPermission(),'["guard"]'==n.permission?n.isAudit=!0:n.isAudit=!1,n.getDrivers(),n._driverListService.getLocations()})},n.prototype.getDrivers=function(){var e=this,n=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions);this.isAudit&&(n.requestedPage="manual"),this._driverListService.getDrivers(n).subscribe(function(n){e.entryLogs.data=n.data.entryLogList,e.total=n.data.totalCount},function(e){})},n.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getDrivers()},n.prototype.disable=function(){return!this.filterForm.dirty},n.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getDrivers()},n.prototype.setSearch=function(e){"\\"!=e[0]&&"\\"!=e&&(this.search=e,this.resetPages(),this.getDrivers())},n.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getDrivers(),this.appliedFilterCount=0,this.isFilterApplied=!1},n.prototype.filter=function(){var e=Object.values(this.filterForm.value),n=C.a(e,function(e){return null!=e});null==this.filterForm.controls.fromDate.value||null!=this.filterForm.controls.toDate.value&&""!=this.filterForm.controls.toDate.value?this.appliedFilterCount=n.length:this.appliedFilterCount=n.length-1,this.resetPages(),this.getDrivers(),this.isFilterApplied=!0},n.prototype.changeStatus=function(e,n){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this._driverListService.changeStatus({status:e,userId:n})];case 1:return t.sent()&&this.getDrivers(),[3,3];case 2:return t.sent(),[3,3];case 3:return[2]}})})},n.prototype.uploadCSV=function(e){return a.__awaiter(this,void 0,void 0,function(){var n,t=this;return a.__generator(this,function(a){return"application/vnd.ms-excel"===(n=e.target.files[0]).type?(this.csvFileName=n.name,this._driverListService.uploadFile(n).subscribe(function(e){e&&200==e.statusCode&&(t.csvFileName="",t.getDrivers())},function(e){})):this._utilityService.showAlert(Object(f.h)("'only xls file allowed  ")),[2]})})},n.prototype.removeCSV=function(){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(e){return this.csvFileName="",this.myInputVariable.nativeElement.value="",[2]})})},n.prototype.ngAfterViewInit=function(){},n.prototype.openImageModal=function(e,n){console.log(e);var t,a=document.getElementById("myModal");t=document.getElementById("img01");var l=document.getElementById("caption");a.style.display="block",t.src=e,l.innerHTML=n.vehicleId?n.vehicleDetails.regNo+"("+n.name+")":n.vehicleInfo.regNo+"("+n.vehicleInfo.name+")",document.getElementsByClassName("close")[0].onclick=function(){a.style.display="none"}},n.prototype.ngOnDestroy=function(){this.unSubscribeSocket()},n.ctorParameters=function(){return[{type:b},{type:p.a},{type:o.ElementRef},{type:_.b},{type:I.a},{type:r.d}]},a.__decorate([Object(o.ViewChild)("upload_csv",{static:!1}),a.__metadata("design:type",o.ElementRef)],n.prototype,"myInputVariable",void 0),n=a.__decorate([Object(o.Component)({selector:"app-entrylog-list",template:t("Q1fq"),styles:[t("b8Ti")]}),a.__metadata("design:paramtypes",[b,p.a,o.ElementRef,_.b,I.a,r.d])],n)}(s.a),T=t("UodH"),F=t("seP3"),N=t("SMsm"),S=t("b716"),E=t("mVsa"),L=t("4epT"),O=t("OkvK"),P=t("v9Dh"),M=t("FpXt"),R=t("9sDP"),j=t("gdGC"),A=t("Wy86"),z=t("RrX5"),V=t("CaoY"),H=t("MzSu"),B=t("3V+5"),U=t("9It4"),Y=t("VWX5"),G=t("uGex"),q=t("4tE/"),$=t("+7By");t.d(n,"EntryLogListModule",function(){return W});var W=function(){function e(){}return e=a.__decorate([Object(o.NgModule)({declarations:[k,D],imports:[i.c,M.a,q.a,U.a,F.c,S.b,T.a,G.a,y.b,N.a,P.a,L.a,d.n,R.a,B.a,O.a,j.a,A.a,z.a,V.a,H.a,E.a,l.a,Y.c,Y.b,r.e.forChild([{path:$.p,component:k}])],providers:[b],entryComponents:[D]})],e)}()},MaPH:function(e,n){e.exports='<div class="header">\n  <h1 class="text-center header_text">ENTRY LOG</h1>\n</div>\n<div class="sub_header" id="regno">\n  <h1 class="text-center font_28px">{{datas.data.data.regNo}}</h1>\n  <hr class="line" />\n</div>\n\n<form [formGroup]="modalForm" #form="ngForm" id="form" (ngSubmit)="addManualEntry()" style="display: none;">\n\n  <div class="form_wrapper">\n\n\n    <div class="row">\n      <div class="row text-center">\n        \x3c!-- <div class="flex_col_sm_5"> --\x3e\n        <div class="form_filed_wrapper">\n          <mat-radio-group matInput aria-label="Select an option">\n            <mat-radio-button value="employee" (change)="radioChange($event)" style="margin-left: 20px;"\n              aria-selected="true">Employee</mat-radio-button>\n            <mat-radio-button value="guest" (change)="radioChange($event)" style="margin-left: 20px;"\n              aria-selected="true">Guest</mat-radio-button>\n\n          </mat-radio-group>\n\n        </div>\n\n\n      </div>\n    </div>\n\n    <div id="guest" style="display: none;">\n      <div class="row">\n\n        <div class="form_filed_wrapper">\n          <mat-form-field appearance="outline">\n            <mat-label>Guest Name</mat-label>\n            <input formControlName="name" matInput />\n            \x3c!-- <mat-error>{{ getControl("name") | validate: "Name" }}\n            </mat-error> --\x3e\n          </mat-form-field>\n        </div>\n      </div>\n\n      <div class="row">\n\n        <div class="form_filed_wrapper">\n          <mat-form-field appearance="outline">\n            <mat-label>Phone Number</mat-label>\n            <input formControlName="mobile" matInput />\n            \x3c!-- <mat-error>{{ getControl("mobile") | validate: "Phone Number" }}\n            </mat-error> --\x3e\n          </mat-form-field>\n        </div>\n      </div>\n\n      <div class="flex_row">\n\n        <div class="flex_col_sm_5">\n          <div class="form_filed_wrapper">\n            <mat-form-field appearance="outline">\n              <mat-label>Modal</mat-label>\n              <input formControlName="modal" matInput />\n              \x3c!-- <mat-error>{{ getControl("modal") | validate: "Modal" }}\n            </mat-error> --\x3e\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div class="flex_col_sm_5">\n\n          <div class="form_filed_wrapper">\n            <mat-form-field appearance="outline">\n              <mat-label>Reason For Visit</mat-label>\n              <input formControlName="reason" matInput />\n              \x3c!-- <mat-error>{{ getControl("reason") | validate: "Reason" }}\n              </mat-error> --\x3e\n            </mat-form-field>\n          </div>\n\n        </div>\n      </div>\n\n      <div class="flex_row">\n\n        <div class="flex_col_sm_5">\n          <div class="form_filed_wrapper">\n            <mat-form-field appearance="outline">\n              <mat-label name="labelHolder">Vehicle Type</mat-label>\n              <mat-select name="vehicleType" class="form-control" formControlName="vehicleType"\n                placeholder="Vehicle Type" [ngClass]="selected">\n\n                <mat-option *ngFor="let type of carType" [value]="type.value">\n                  {{type.viewValue}}\n\n                </mat-option>\n              </mat-select>\n              \x3c!-- <mat-error>{{getControl(\'vehicleType\')|validate:\'Vehicle Type\'}}\n            </mat-error> --\x3e\n            </mat-form-field>\n          </div>\n        </div>\n        <div class="flex_col_sm_5">\n\n          <div class="form_filed_wrapper">\n            \x3c!-- <mat-form-field appearance="outline">\n              <mat-label>Valid Till</mat-label>\n              <input formControlName="validtill" matInput />\n              <mat-error>{{ getControl("validtill") | validate: "Valid Till" }}\n              </mat-error>\n            </mat-form-field>\n          </div> --\x3e\n\n            <mat-form-field appearance="outline">\n              <mat-label>Valid Till</mat-label>\n\n              <input matInput readonly formControlName="guestValidity" [min]="minDate" [owlDateTimeTrigger]="dt2"\n                [owlDateTime]="dt2">\n              <owl-date-time [pickerType]="\'both\'" [hour12Timer]="true" #dt2></owl-date-time>\n\n              \x3c!-- <mat-error>{{ getControl("guestValidity") | validate: "Valid Till" }}\n            </mat-error> --\x3e\n              <mat-error *ngIf="isUniqueMsg">{{ isUniqueMsg }}</mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n\n      </div>\n\n      <div class="flex-col-sm-10">\n        <div class="form_filed_wrapper text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button class="btn btn-primary" (click)="addManualEntry()" mat-raised-button type="button">\n                Skip\n              </button>\n            </li>\n            <li>\n              <button type="button"  (click)="addManualEntry()" mat-raised-button color="primary">\n                Add\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n    </div>\n\n    <div id="employee" style="display: none;">\n\n      <div class="row">\n\n        <div class="form_filed_wrapper">\n          <mat-form-field appearance="outline">\n            <mat-label>Employee ID</mat-label>\n\n            <input type="text" placeholder="Search by Employee ID" aria-label="Number" matInput\n              (ngModelChange)="searchEmp($event)" formControlName="employeeId" (selectionChange)="getData($event)"\n              [matAutocomplete]="auto">\n            <mat-error>{{getControl(\'employeeId\')|validate:\'Employee ID\'}}</mat-error>\n          </mat-form-field>\n\n          <mat-autocomplete #auto="matAutocomplete">\n            <mat-option *ngFor="let option of employeeSearchData" [value]="option.employeeId">\n              {{option.employeeId}}\n            </mat-option>\n          </mat-autocomplete>\n\n          <span>{{empName?empName:\'\'}}</span>\n\n        </div>\n      </div>\n\n      <div class="flex_row">\n\n        <div class="flex_col_sm_5">\n          \n            <mat-form-field appearance="outline">\n                <mat-label>Vehicle Type</mat-label>\n                <mat-select style="padding: 0% !important;" name="type" formControlName="vehicleType" placeholder="Company Location"\n                    [ngClass]="selected">\n                    <mat-option *ngFor="let type of carType" [value]="type.value">\n                        {{type.viewValue}}\n                    </mat-option>\n                </mat-select>\n                \x3c!-- <mat-error>{{getControl(\'companyLocationName\')|validate:\'Company Location\'}}\n                </mat-error> --\x3e\n            </mat-form-field>\n\n\n          \x3c!-- <div class="form_filed_wrapper">\n            <mat-form-field appearance="outline">\n              <mat-label name="labelHolder">Vehicle Type</mat-label>\n              <mat-select name="vehicleType" class="form-control" formControlName="vehicleType"\n                placeholder="Vehicle Type" [ngClass]="selected">\n\n                <mat-option *ngFor="let type of carType" [value]="type.value">\n                  {{type.viewValue}}\n\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div> --\x3e\n        </div>\n        <div class="flex_col_sm_5">\n          \x3c!-- <div class="form_filed_wrapper"> --\x3e\n            <mat-form-field appearance="outline">\n              <mat-label>Model</mat-label>\n              <input formControlName="modal" matInput />\n              \x3c!-- <mat-error>{{ getControl("modal") | validate: "Modal" }}\n            </mat-error> --\x3e\n            </mat-form-field>\n          \x3c!-- </div> --\x3e\n        </div>\n\n      </div>\n\n\n\n      <div class="flex-col-sm-10">\n        <div class="form_filed_wrapper text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button class="btn btn-primary" (click)="addManualEntry()" mat-raised-button type="button">\n                Skip\n              </button>\n            </li>\n            <li>\n              <button type="button"  (click)="addManualEntry()" mat-raised-button color="primary">\n                Add\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</form>\n\n<div class="sub_header confirm_popup" id="done" style="display: none;">\n  <div class="confirm_popup text-center "><span class="font_20px"\n      *ngIf="datas.data.data.name">{{datas.data.data.name}}</span></div>\n  <div class="confirm_popup text-center "><span class="font_20px" *ngIf="datas.data.data.inTime">In Time:\n      {{datas.data.data.inTime}}</span></div>\n\n  <h1 class="text-center">\n    <mat-icon class="done">done</mat-icon>\n  </h1>\n\n  <div *ngIf="datas.data.event == socketEvents[0].value" class="confirm_popup text-center">\n    <h1 class="done_text">Whitelisted</h1>\n  </div>\n  <div *ngIf="datas.data.event != socketEvents[0].value" class="confirm_popup text-center">\n    <h1 class="done_text">{{datas.data.message}}</h1>\n  </div>\n\n</div>\n\n<div class="sub_header confirm_popup" id="cancel" style="display: none;">\n  <div class="confirm_popup text-center "><span class="font_20px"\n      *ngIf="datas.data.data.name">{{datas.data.data.name}}</span></div>\n  <div class="confirm_popup text-center "><span class="font_20px" *ngIf="datas.data.data.inTime">In Time:\n      {{datas.data.data.inTime}}</span></div>\n\n  <h1 class="text-center">\n    <mat-icon class="cancel">cancel</mat-icon>\n  </h1>\n\n  <div *ngIf="datas.data.event == socketEvents[1].value" class="confirm_popup text-center">\n    <h1 class="cancel_text">Blacklisted</h1>\n  </div>\n  <div *ngIf="datas.data.event != socketEvents[1].value" class="confirm_popup text-center">\n    <h1 class="cancel_text">{{datas.data.message}}</h1>\n  </div>\n\n\n</div>'},Q1fq:function(e,n){e.exports='\x3c!-- <div class="main-content complete-align">\n    <div class="flex_row">\n        <div class="flex_col_sm_5 rowFilterBox">\n\n        <ul class="breadcrumb">\n            <li>\n                <a href="javascript:void(0)">Home</a>\n              </li>\n              <li>\n                <a href="javascript:void(0)" class="active">Entry Log</a>\n              </li>\n              <li>\n                <a href="javascript:void(0)" class="active">list</a>\n              </li>\n        </ul>\n    </div>\n    </div>\n\n    <div class="flex_row">\n        <div class="flex_col_sm_5 rowFilterBox">\n    \n        <div class="col-12 col-lg-6 col-xl">\n            <span style="font-size: 25px; font-weight: 100;">\n              Entry Log\n            </span>\n        </div>\n      </div>\n      </div>\n   \n\n    <div class="flex_row">\n\n     <div class="flex_col_sm_5 rowFilterBox">\n        <ul class="btn_wrapper text-right">\n            <li> <button mat-raised-button [disabled]="isAudit" (click)="showFilter=!showFilter" class="action_menu">\n                    <mat-icon>filter_list</mat-icon> Filter\n                </button> </li>\n          \n        </ul>\n      </div>\n\n    </div>\n\n    <div class="flex_row">\n        <div class="flex_col_sm_5 rowFilterBox">\n            <app-search-filter [placeholder]="\'Search by full name, reg no.\'" (setSearch)="setSearch($event)">\n            </app-search-filter>\n            <ul class="archieveData">\n            </ul>\n        </div>\n    </div>\n    \n</div>\n\n<div class="white_wrapper filter_wrapper" [class.filter_wrapper_show]="showFilter">\n    <div class="flex_row">\n        <div class="flex_col_sm_6">\n            <app-date-filter [dateObject]="filterObject.registrationDate">\n            </app-date-filter>\n        </div>\n        <div class="flex_col_sm_3">\n            <app-dropdown-filter [dropdown]="filterObject.compLocationName"></app-dropdown-filter>\n        </div>\n        <div class="flex_col_sm_3">\n            <app-dropdown-filter [dropdown]="filterObject.userType"></app-dropdown-filter>\n        </div>\n        <div class="flex_col_sm_3">\n            <app-dropdown-filter [dropdown]="filterObject.requestedPage"></app-dropdown-filter>\n        </div>\n        <div class="flex_col_sm_3">\n            <app-dropdown-filter [dropdown]="filterObject.status"></app-dropdown-filter>\n        </div>\n    </div>\n    <div class="flex_row">\n        <div class="flex_col_sm_10 text-center">\n\n            <ul class="btn_wrapper">\n                <li> <button filter_btn mat-stroked-button [disabled]="disable()" (click)="resetFilter()">\n                        Reset\n                    </button>\n                </li>\n\n                <li>\n\n                    <button filter_btn mat-raised-button color="primary" [disabled]="disable()" (click)="filter()">\n                        Filter\n                    </button>\n                </li>\n            </ul>\n\n\n        </div>\n    </div>\n</div>\n\n<div class="white_wrapper">\n    <table mat-table [dataSource]="entryLogs" matSort (matSortChange)="sortData($event)" class="mat-elevation-z8">\n        <ng-container matColumnDef="position">\n            <th mat-header-cell *matHeaderCellDef>#</th>\n            <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef="numPlate">\n            <th mat-header-cell *matHeaderCellDef>LICENSE PLATE</th>\n            <td mat-cell *matCellDef="let element">\n                <span *ngIf="element.vehicleId"\n          class="view_details td-text-wrap td-color-font"\n          [routerLink]="[\'DRIVER\' | absolutePath, element._id]">\n              {{ element.vehicleDetails.regNo | checkNull | titlecase}}\n              </span>\n              <span *ngIf="!element.vehicleId"\n          class="view_details td-text-wrap td-color-font"\n          [routerLink]="[\'DRIVER\' | absolutePath, element._id]">\n              {{ element.vehicleInfo.regNo | checkNull | titlecase }}\n              </span>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef="userName">\n            <th mat-header-cell *matHeaderCellDef>NAME</th>\n            <td mat-cell *matCellDef="let element">\n                <span *ngIf="element.vehicleId" class="td-color-font">{{ element.name | checkNull }}</span>\n                <span *ngIf="!element.vehicleId" class="td-color-font">{{ element.vehicleInfo.name | checkNull }}</span>\n            </td>\n          </ng-container>  \n\n\n          <ng-container matColumnDef="userType">\n            <th mat-header-cell *matHeaderCellDef>USER TYPE</th>\n            <td mat-cell *matCellDef="let element" class="td-color-font">\n              {{ element.userType | checkNull | titlecase }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef="inTime">\n            <th mat-header-cell *matHeaderCellDef>IN TIME</th>\n            <td mat-cell *matCellDef="let element" class="td-color-font">\n\n              {{ element.inTime | date: \'short\' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef="outTime">\n            <th mat-header-cell *matHeaderCellDef>OUT TIME</th>\n            <td mat-cell *matCellDef="let element" class="td-color-font">\n\n              {{ element.outTime | date: \'short\' | checkNull }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef="type">\n            <th mat-header-cell *matHeaderCellDef>VEHICLE TYPE</th>\n            <td mat-cell *matCellDef="let element">\n                <span *ngIf="element.vehicleId" class="td-color-font">{{ element.vehicleDetails.vehicleType | checkNull | titlecase }}</span>\n                <span *ngIf="!element.vehicleId" class="td-color-font">{{ element.vehicleInfo.vehicleType | checkNull | titlecase }}</span>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef="modal">\n            <th mat-header-cell *matHeaderCellDef>MODEL NAME</th>\n            <td mat-cell *matCellDef="let element">\n             <span *ngIf="element.vehicleId" class="td-color-font"> {{ element.vehicleDetails.modal | checkNull | titlecase }}</span>\n             <span *ngIf="!element.vehicleId" class="td-color-font"> {{ element.vehicleInfo.modal | checkNull | titlecase }}</span>\n\n            </td>\n          </ng-container>\n          \n          <ng-container matColumnDef="entryType">\n            <th mat-header-cell *matHeaderCellDef>ENTRY TYPE</th>\n            <td mat-cell *matCellDef="let element" class="td-color-font">\n              {{ element.entryType | checkNull | titlecase }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef="companyLocationName">\n            <th mat-header-cell *matHeaderCellDef>COMPANY LOCATION</th>\n            <td mat-cell *matCellDef="let element" class="td-color-font">\n              {{ element.companyLocationName | checkNull }}\n            </td>\n          </ng-container> \n\n          <ng-container matColumnDef="status">\n            <th mat-header-cell *matHeaderCellDef>STATUS</th>\n            <td mat-cell *matCellDef="let element">\n              <span *ngIf="element.vehicleDetails && element.vehicleDetails.status == \'unblocked\'" class="td-color-font">Whitelisted</span>\n              <span *ngIf="element.vehicleDetails && element.vehicleDetails.status == \'blocked\'" class="td-color-font">Blacklisted</span>\n              <span *ngIf="!element.vehicleDetails" class="td-color-font">Whitelisted</span>\n            </td>\n          </ng-container>  \n        <ng-container matColumnDef="action">\n            <th mat-header-cell *matHeaderCellDef> ACTION </th>\n            <td mat-cell *matCellDef="let element">\n\n                <button *ngIf="element.vehicleId" mat-button [matMenuTriggerFor]="menu" [disabled]="element.entryType != \'manual\'" class="btn-more-menu">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n\n                <button *ngIf="!element.vehicleId" mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menu="matMenu" xPosition="before">\n                    <button mat-menu-item [routerLink]="[\'EDIT_DRIVER\'|absolutePath,element._id]">\n                        <mat-icon matTooltip="Edit">edit</mat-icon> Edit\n                    </button>\n                </mat-menu>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n    </table>\n\n    <div class="white_wrapper" *ngIf="total===0">\n        <h2 class="not-found">No Data Found</h2>\n    </div>\n\n    <div class="white_wrapper" *ngIf="entryLogs.data.length">\n        <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions" (page)="changePage($event)">\n        </mat-paginator>\n    </div>\n</div> --\x3e\n<div class="main-content complete-align">\n  <div class="row">\n    <div class="col-12 col-lg-6 col-xl">\n      <ul class="breadcrumb">\n        <li>\n          <a href="#/admin/dashboard">Home</a>\n        </li>\n        <li>\n          <a href="javascript:void(0)" class="active">Entry Log</a>\n        </li>\n        <li>\n          <a href="javascript:void(0)" class="active">List</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 10px">\n    <div class="col-12 col-lg-6 col-xl">\n        <label  style="font-size: 25px !important;font-weight: 100 !important;">\n          Entry Log\n        </label>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 20px">\n    <div class="col-12 col-lg-6 col-xl">\n\n      <div _ngcontent-vmx-c9="" class="white-card" style="padding-top: 2%;">\n        <div class="row">\n          <div class="col-12 col-lg-6 col-xl-4">\n            <app-date-filter [dateObject]="filterObject.registrationDate">\n            </app-date-filter>\n          </div>\n          <div class="col-12 col-lg-6 col-xl-2">\n            <app-dropdown-filter [dropdown]="filterObject.compLocationName"></app-dropdown-filter>\n          </div>\n          <div class="col-12 col-lg-6 col-xl-2">\n            <app-dropdown-filter [dropdown]="filterObject.userType"></app-dropdown-filter>\n          </div>\n          <div class="col-12 col-lg-6 col-xl-2">\n            <app-dropdown-filter [dropdown]="filterObject.requestedPage"></app-dropdown-filter>\n          </div>\n          <div class="col-12 col-lg-6 col-xl-2">\n            <app-dropdown-filter [dropdown]="filterObject.status"></app-dropdown-filter>\n          </div>\n          <div  class="col-12 col-lg-6 col-xl-1">\n            <button style="margin-left: 25%;" filter_btn mat-stroked-button [disabled]="disable()" (click)="resetFilter()">\n              Reset\n            </button>\n          </div>\n          <div  class="col-12 col-lg-6 col-xl-1">\n            <button filter_btn mat-raised-button color="primary" [disabled]="disable()" (click)="filter()">\n              Filter\n            </button>\n          </div>\n          <div  class="col-12 col-lg-6 col-xl-6"></div>\n          <div class="col-12 col-lg-6 col-xl-4">\n            <div _ngcontent-vmx-c9="" class="table_search" style=" padding-right: 4%">\n              <div _ngcontent-vmx-c9="" class="table_search-box" >\n                <input _ngcontent-vmx-c9="" class="table_search-input" id="workersearch" #searchInput (keyup)="setSearch(searchInput.value)"  placeholder="Search" type="text">\n                <img _ngcontent-vmx-c9="" alt="search" class="table_search-icon" src="assets/images/search-24.png">\n              </div>   \n            </div> \n          </div>\n\n        </div>\n        <table mat-table [dataSource]="entryLogs" matSort (matSortChange)="sortData($event)" class="mat-elevation-z8">\n          <ng-container matColumnDef="position">\n              <th mat-header-cell *matHeaderCellDef>#</th>\n              <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}} </td>\n          </ng-container>\n  \n  \n          <ng-container matColumnDef="numPlate">\n              <th mat-header-cell *matHeaderCellDef>LICENSE PLATE</th>\n              <td mat-cell *matCellDef="let element">\n                  <span *ngIf="element.vehicleId"\n            class=" td-text-wrap td-color-font"\n           >\n           \x3c!-- [routerLink]="[\'DRIVER\' | absolutePath, element._id]" --\x3e\n                {{ element.vehicleDetails.regNo | checkNull | uppercase}}\n                </span>\n                <span *ngIf="!element.vehicleId"\n            class="view_details td-text-wrap td-color-font"\n            >\n            \x3c!-- [routerLink]="[\'DRIVER\' | absolutePath, element._id]" --\x3e\n                {{ element.vehicleInfo.regNo | checkNull | uppercase }}\n                </span>\n              </td>\n            </ng-container>\n  \n            <ng-container matColumnDef="userName">\n              <th mat-header-cell *matHeaderCellDef>NAME</th>\n              <td mat-cell *matCellDef="let element">\n                  <span *ngIf="element.vehicleId" class="td-color-font">{{ element.name | checkNull }}</span>\n                  <span *ngIf="!element.vehicleId" class="td-color-font">{{ element.vehicleInfo.name | checkNull }}</span>\n              </td>\n            </ng-container>  \n  \n  \n            <ng-container matColumnDef="userType">\n              <th mat-header-cell *matHeaderCellDef>USER TYPE</th>\n              <td mat-cell *matCellDef="let element" class="td-color-font">\n                {{ element.userType | checkNull | titlecase }}\n              </td>\n            </ng-container>\n  \n            <ng-container matColumnDef="inTime">\n              <th mat-header-cell *matHeaderCellDef>IN TIME</th>\n              <td mat-cell *matCellDef="let element" class="td-color-font">\n  \n                {{ element.inTime | date: \'short\' }}\n              </td>\n            </ng-container>\n  \n            <ng-container matColumnDef="outTime">\n              <th mat-header-cell *matHeaderCellDef>OUT TIME</th>\n              <td mat-cell *matCellDef="let element" class="td-color-font">\n  \n                {{ element.outTime | date: \'short\' | checkNull }}\n              </td>\n            </ng-container>\n  \n            <ng-container matColumnDef="type">\n              <th mat-header-cell *matHeaderCellDef>VEHICLE TYPE</th>\n              <td mat-cell *matCellDef="let element">\n                  <span *ngIf="element.vehicleId" class="td-color-font">{{ element.vehicleDetails.vehicleType | checkNull | titlecase }}</span>\n                  <span *ngIf="!element.vehicleId" class="td-color-font">{{ element.vehicleInfo.vehicleType | checkNull | titlecase }}</span>\n              </td>\n            </ng-container>\n  \n            <ng-container matColumnDef="modal">\n              <th mat-header-cell *matHeaderCellDef>MODEL NAME</th>\n              <td mat-cell *matCellDef="let element">\n               <span *ngIf="element.vehicleId" class="td-color-font"> {{ element.vehicleDetails.modal | checkNull | titlecase }}</span>\n               <span *ngIf="!element.vehicleId" class="td-color-font"> {{ element.vehicleInfo.modal | checkNull | titlecase }}</span>\n  \n              </td>\n            </ng-container>\n            \n            <ng-container matColumnDef="entryType">\n              <th mat-header-cell *matHeaderCellDef>ENTRY TYPE</th>\n              <td mat-cell *matCellDef="let element" class="td-color-font">\n                {{ element.entryType | checkNull | titlecase }}\n              </td>\n            </ng-container>\n  \n            <ng-container matColumnDef="companyLocationName">\n              <th mat-header-cell *matHeaderCellDef>COMPANY LOCATION</th>\n              <td mat-cell *matCellDef="let element" class="td-color-font">\n                {{ element.companyLocationName | checkNull }}\n              </td>\n            </ng-container> \n  \n            <ng-container matColumnDef="status">\n              <th mat-header-cell *matHeaderCellDef>STATUS</th>\n              <td mat-cell *matCellDef="let element">\n                \x3c!-- <span *ngIf="element.vehicleDetails && element.vehicleDetails.status == \'unblocked\'" class="td-color-font">Unblocked</span>\n                <span *ngIf="element.vehicleDetails && element.vehicleDetails.status == \'blocked\'" class="td-color-font">Blocked</span>\n                <span *ngIf="!element.vehicleDetails" class="td-color-font">Unblocked</span> --\x3e\n                <span> {{ element.status | checkNull }}</span>\n              </td>\n            </ng-container> \n            <ng-container matColumnDef="event">\n              <th mat-header-cell *matHeaderCellDef>Event Image</th>\n              <td mat-cell *matCellDef="let element">\n                <img (click)="openImageModal(element.eventImageURL,element)" width="50" height="50" src= {{element.eventImageURL}}/>\n              </td>\n            </ng-container> \n            <ng-container matColumnDef="ocr">\n              <th mat-header-cell *matHeaderCellDef>OCR Image</th>\n              <td mat-cell *matCellDef="let element">\n                <img (click)="openImageModal(element.ocrImageURL,element)" width="50" height="50" src= {{element.ocrImageURL}}/>\n              </td>\n            </ng-container> \n             \n          <ng-container matColumnDef="action">\n              <th mat-header-cell *matHeaderCellDef> ACTION </th>\n              <td mat-cell *matCellDef="let element">\n  \n                  <button *ngIf="element.vehicleId" mat-button [matMenuTriggerFor]="menu" [disabled]="element.entryType != \'manual\'" class="btn-more-menu">\n                      <mat-icon>more_vert</mat-icon>\n                  </button> \n  \n                  <button *ngIf="!element.vehicleId" mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                      <mat-icon>more_vert</mat-icon>\n                  </button>\n                  <mat-menu #menu="matMenu" xPosition="before">\n                      <button mat-menu-item [routerLink]="[\'EDIT_ENTRY_LOG\'|absolutePath,element._id]">\n                          <mat-icon matTooltip="Edit">edit</mat-icon> Edit\n                      </button>\n                  </mat-menu>\n              </td>\n          </ng-container>\n  \n          <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n          <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n      </table>\n      </div>\n  \n    <div class="white_wrapper" *ngIf="total === 0">\n      <h2 class="not-found">No Employee Found</h2>\n    </div>\n    <div class="white_wrapper" *ngIf="entryLogs.data.length">\n      <mat-paginator [length]="total" [pageIndex]="page - 1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n        (page)="changePage($event)">\n      </mat-paginator>\n    </div>\n  </div>\n  </div>\n</div>\n\n\x3c!-- <a class="image-link" href="https://cdn.shopify.com/s/files/1/2018/8867/files/matteo-paganelli-39971_800x.jpg"><img src="https://cdn.shopify.com/s/files/1/2018/8867/files/matteo-paganelli-39971_200x.jpg"></a> --\x3e\n\n\x3c!-- <img id="myImg" src="https://cdn.shopify.com/s/files/1/2018/8867/files/matteo-paganelli-39971_800x.jpg" alt="Snow" style="width:100%;max-width:300px"> --\x3e\n\n\x3c!-- The Modal --\x3e\n<div id="myModal" class="modal">\n  <span class="close">&times;</span>\n  <img class="modal-content" id="img01">\n  <div id="caption"></div>\n</div>'},b8Ti:function(e,n){e.exports='@charset "UTF-8";\n.flex_row {\n  display: flex;\n  margin: 0 -10px;\n  align-items: center;\n}\n.breadcrumb {\n  width: 100%;\n}\n.breadcrumb li {\n  display: inline-block;\n}\n.breadcrumb li a {\n  color: #006CB8;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n}\n.breadcrumb li a:before {\n  padding: 0 10px;\n  color: #B7BEC1;\n  content: "/ ";\n  margin: auto;\n}\n.breadcrumb li a:after {\n  content: "/\xa0";\n  padding: 0 2px;\n  color: #A2ABAE;\n}\n.breadcrumb li a.active {\n  color: #262c2d;\n  cursor: default;\n}\n.breadcrumb li a.active:after {\n  display: none;\n}\n.breadcrumb li:first-child a:before, .breadcrumb li:first-child a:after {\n  display: none;\n}\n.white_wrapper.action {\n  overflow: inherit !important;\n  position: relative;\n}\n.actionmenu {\n  margin-top: 10px;\n  z-index: 9999;\n  border: 1px solid #e0e0e0;\n  position: absolute;\n  background: #fff;\n  top: 30px;\n  right: 0px;\n}\n.actionmenu li {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  position: relative;\n  flex-direction: row;\n}\n.actionmenu li input {\n  width: 100%;\n}\n.csv-product {\n  background: transparent !important;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d !important;\n  width: 100%;\n  justify-content: flex-start;\n  display: flex;\n  font-family: "Segoe UI";\n  font-size: 13px;\n  position: relative;\n}\n.csv-product .mat-button-wrapper {\n  margin: 0;\n}\n.csv-product button {\n  background: transparent !important;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d !important;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  font-family: "Segoe UI";\n  font-size: 13px;\n}\n.csv-product button .material-icons {\n  font-size: 19px;\n}\n.csv-product.upload input {\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.uploadcsv {\n  background: transparent;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d;\n  position: relative;\n  border-bottom: 1px solid #e0e0e0;\n}\n.uploadcsv input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.rowFilterBox {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\napp-search-filter {\n  width: 60%;\n}\n.uploadData {\n  text-align: center;\n}\n.uploadData label {\n  font-size: 13px;\n}\n.uploadData img {\n  width: 15px;\n  height: 15px;\n}\n.archieveData li {\n  margin-left: 10px;\n}\n.archieveData li a {\n  font-size: 14px;\n  font-weight: 400;\n  text-decoration: underline;\n  color: #006CB8;\n  font-family: "Segoe UI";\n}\n:host ::ng-deep .csv-product .mat-button-wrapper {\n  margin: 0;\n}\n:host ::ng-deep .csv-product button .material-icons {\n  font-size: 19px;\n}\n:host ::ng-deep .csv-product .material-icons {\n  font-size: 19px;\n}\n:host ::ng-deep .searchWrapper {\n  width: 100% !important;\n}\n:host ::ng-deep .btn_wrapper li {\n  padding: 0;\n}\n:host ::ng-deep .btn_wrapper li.action button.mat-raised-button.mat-primary {\n  background-color: transparent;\n  color: #091e42;\n  border: 1px solid #c0c2c2;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li button {\n  transition: all 0.5s ease;\n  -webkit-transition: all 0.5s ease;\n  -moz-transition: all 0.5s ease;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li button.mat-raised-button.mat-primary {\n  box-shadow: none;\n  border: 0;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li:hover {\n  background: #e8e8e8 !important;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li:first-child button.mat-raised-button.mat-primary {\n  border-bottom: 1px solid #e0e0e0;\n}\n:host ::ng-deep .mat-menu-content {\n  height: auto;\n}\nbutton.action_menu {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  outline: 0;\n  min-width: 64px;\n  line-height: 36px;\n  padding: 0 16px;\n  border-radius: 4px;\n  overflow: visible;\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n  transition: background 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: transparent;\n  color: #091e42;\n  border: 1px solid #c0c2c2;\n  display: flex;\n  align-items: center;\n}\nbutton.action_menu .mat-icon {\n  position: relative;\n  right: 10px;\n}\nth {\n  font-family: "avenir-medium";\n  color: black !important;\n  opacity: 36% !important;\n  font-size: 10px !important;\n}\n.td-color-font, td, .td-text-wrap {\n  font-family: avenir-book !important;\n  color: black !important;\n  opacity: 88% !important;\n  font-size: 14px !important;\n}\n.complete-align {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n.text-muted {\n  color: #7a7878 !important;\n}\n.col-2 {\n  padding-left: 0 !important;\n}\n.table_search-input {\n  font-family: "avenir-medium";\n  font-size: 1rem;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  border: none;\n  color: #000;\n}\n.table_search-box {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #e6ebf0;\n  padding: 0.5rem;\n}\n.table_wrapper {\n  padding: 2.4rem;\n}\n.white-card {\n  border-radius: 4px;\n  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.06);\n  background-color: #ffffff;\n}\n.table_search {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 0 1rem 0;\n}\n::-webkit-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n::-moz-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n::-ms-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: #CBD3CF;\n}\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: #CBD3CF;\n}\n#myImg {\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.3s;\n}\n#myImg:hover {\n  opacity: 0.7;\n}\n/* The Modal (background) */\n.modal {\n  display: none;\n  /* Hidden by default */\n  position: fixed;\n  /* Stay in place */\n  z-index: 1000;\n  /* Sit on top */\n  padding-top: 100px;\n  /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%;\n  /* Full width */\n  height: 100%;\n  /* Full height */\n  overflow: auto;\n  /* Enable scroll if needed */\n  background-color: black;\n  /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.9);\n  /* Black w/ opacity */\n}\n/* Modal Content (image) */\n.modal-content {\n  margin: auto;\n  display: block;\n  width: 80%;\n  height: 80%;\n  max-width: 700px;\n}\n/* Caption of Modal Image */\n#caption {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  text-align: center;\n  color: #ccc;\n  padding: 10px 0;\n  height: 150px;\n}\n/* Add Animation */\n.modal-content, #caption {\n  -webkit-animation-name: zoom;\n  -webkit-animation-duration: 0.6s;\n  animation-name: zoom;\n  animation-duration: 0.6s;\n}\n@-webkit-keyframes zoom {\n  from {\n    -webkit-transform: scale(0);\n  }\n  to {\n    -webkit-transform: scale(1);\n  }\n}\n@keyframes zoom {\n  from {\n    -webkit-transform: scale(0);\n            transform: scale(0);\n  }\n  to {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n}\n/* The Close Button */\n.close {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: #f1f1f1;\n  font-size: 40px;\n  font-weight: bold;\n  transition: 0.3s;\n}\n.close:hover,\n.close:focus {\n  color: #bbb;\n  text-decoration: none;\n  cursor: pointer;\n}\n/* 100% Image Width on Smaller Screens */\n@media only screen and (max-width: 700px) {\n  .modal-content {\n    width: 100%;\n  }\n}'},p7x7:function(e,n){e.exports=".header {\n  background-color: #0080ff;\n  height: 40px;\n  color: white;\n}\n\n.header_text {\n  padding-top: 10px;\n}\n\n.sub_header {\n  padding-top: 20px;\n  height: 40px;\n}\n\n.line {\n  margin-top: 20px;\n  border: 0.5px solid gray;\n}\n\n.font_28px {\n  font-size: 28px;\n}\n\n.flex_row {\n  display: flex;\n  margin: 0 -10px;\n  align-items: center;\n}\n\n.alignRight {\n  margin-left: auto;\n}\n\n.flex {\n  display: flex;\n}\n\n.confirm_popup {\n  margin-top: 20px;\n}\n\n.font_20px {\n  font-size: 20px;\n}\n\n.cancel {\n  font-size: 100px;\n  margin-right: 70px;\n  color: red;\n}\n\n.cancel_text {\n  font-size: 24px;\n  color: red;\n}\n\n.done_text {\n  font-size: 24px;\n  color: green;\n}\n\n.done {\n  font-size: 100px;\n  margin-right: 70px;\n  color: green;\n}"}}]);
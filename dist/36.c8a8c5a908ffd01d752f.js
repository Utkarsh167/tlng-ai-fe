(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"DtF/":function(e,n,t){"use strict";t.r(n);var a=t("mrSG"),o=t("Cllz"),l=t("CcnG"),i=t("Ip0R"),r=t("RzZf"),s=t("buKM"),c=t("gIcY"),m=t("FTgb"),p=t("jRgp"),d=t("vblm"),u=t("67Y/"),h=t("9Z1F"),g=t("XlPw"),f=t("iiAa"),b=function(){function e(e,n,t,a,o){this._formService=e,this._formBuilder=n,this._http=t,this._utilityService=a,this._zone=o}return e.prototype.getFilterForm=function(){return this._formBuilder.group(this._formService.getFilterFormControls(["fromDate","toDate","status","compLocationName"]))},e.prototype.getEmployees=function(e){return this._http.get(p.ab,e)},e.prototype.getEventSource=function(e){return new EventSource(e)},e.prototype.getCompanyShift=function(){return this._http.get(p.p)},e.prototype.createFilterObject=function(e){return{registrationDate:{label:"Registration Date",fromDate:e.controls.fromDate,toDate:e.controls.toDate},status:{label:"Status",list:[{viewValue:"Active",value:"unblocked"},{viewValue:"Blocked",value:"blocked"}],control:e.controls.status},compLocationName:{label:"Building",list:JSON.parse(localStorage.getItem("buildings")),control:e.controls.compLocationName}}},e.prototype.changeStatus=function(e){return a.__awaiter(this,void 0,void 0,function(){var n,t,o,l;return a.__generator(this,function(a){switch(a.label){case 0:return a.trys.push([0,5,,6]),n=e.status.toUpperCase(),t={message:d.b[n].confirm("Employee")},[4,this._utilityService.openDialog(t).toPromise()];case 1:return a.sent()?[4,o="DELETED"===n?this._http.delete(p.Y+e.userId).toPromise():this._http.post(p.h+e.userId,{status:e.status}).toPromise()]:[3,3];case 2:return a.sent(),this._utilityService.showAlert(d.b[n].success("Employee")),[2,Promise.resolve(o)];case 3:return[2,Promise.resolve(null)];case 4:return[3,6];case 5:return l=a.sent(),[2,Promise.reject(l)];case 6:return[2]}})})},e.prototype.uploadFile=function(e){var n=this,t=new FormData;t.append("file",e);return this._http.post(p.X,t).pipe(Object(u.a)(function(e){return n._utilityService.showAlert(d.b.UPLOADED("File")),e}),Object(h.a)(function(e){return Object(g.a)(e)}))},e.ctorParameters=function(){return[{type:s.a},{type:c.d},{type:m.a},{type:f.a},{type:l.NgZone}]},e=a.__decorate([Object(l.Injectable)(),a.__metadata("design:paramtypes",[s.a,c.d,m.a,f.a,l.NgZone])],e)}(),v=t("BHnd"),x=t("f0Wu"),y=t("xG9w"),_=t("cNrm"),w=t("8H0n"),L=function(e){function n(n,t,a,o,l){var i=e.call(this)||this;return i._employeeListService=n,i._utilityService=t,i._elementRef=a,i._socket=o,i.excelService=l,i.displayedColumns=["position","empId","name","email","companyLocationName","vehicles","created","action"],i.employees=new v.a([]),i.appliedFilterCount=0,i.isFilterApplied=!1,i.csvFileName="",i.shifts=[],i.menu=!1,i.tempEmployeesData=[],i.createFilterForm(),i.filterObject=i._employeeListService.createFilterObject(i.filterForm),i}return a.__extends(n,e),n.prototype.ngOnInit=function(){this.getEmployees()},n.prototype.createFilterForm=function(){this.filterForm=this._employeeListService.getFilterForm()},n.prototype.getEmployees=function(){var e=this,n=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions);console.log(this.filterForm.value),this._employeeListService.getEmployees(n).subscribe(function(n){console.log(n),e.employees.data=n.data.userList,e.total=n.data.totalCount,e.tempEmployeesData=n.data.userList},function(e){})},n.prototype.getShifts=function(){var e=this;this._employeeListService.getCompanyShift().subscribe(function(n){e.shifts=n.data.shiftSlot},function(e){})},n.prototype.setTime=function(e){return x.utc(e,"HH:mm:ss").tz(Intl.DateTimeFormat().resolvedOptions().timeZone).format("hh:mm A")},n.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getEmployees()},n.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getEmployees()},n.prototype.disable=function(){return!this.filterForm.dirty},n.prototype.setSearch=function(e){"\\"!=e[0]&&"\\"!=e&&(this.search=e,this.resetPages(),this.getEmployees())},n.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getEmployees(),this.appliedFilterCount=0,this.isFilterApplied=!1},n.prototype.filter=function(){var e=Object.values(this.filterForm.value),n=y.a(e,function(e){return null!=e});console.log(this.filterForm.value),this.resetPages(),this.getEmployees(),null!=this.filterForm.controls.fromDate.value&&null==this.filterForm.controls.toDate.value||""==this.filterForm.controls.toDate.value?this.appliedFilterCount=n.length-1:this.appliedFilterCount=n.length,this.isFilterApplied=!0},n.prototype.changeStatus=function(e,n){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this._employeeListService.changeStatus({status:e,userId:n})];case 1:return t.sent()&&(this.total-(this.page*this.pageSize-this.pageSize)==1&&(this.page=1),this.getEmployees()),[3,3];case 2:return t.sent(),[3,3];case 3:return[2]}})})},n.prototype.uploadCSV=function(e){var n=this,t=e.target.files[0];"application/vnd.ms-excel"===t.type?(this.csvFileName=t.name,this._employeeListService.uploadFile(t).subscribe(function(e){e&&200==e.statusCode&&(n.csvFileName="",n.getEmployees(),n.myInputVariable.nativeElement.value="")},function(e){})):this._utilityService.showAlert(Object(d.h)("only xls file allowed  "))},n.prototype.removeCSV=function(){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(e){return this.csvFileName="",this.myInputVariable.nativeElement.value="",this._utilityService.showAlert("File Removed"),[2]})})},n.prototype.ngAfterViewInit=function(){},n.prototype.downloadEmployee=function(){var e=this,n=a.__assign({},this.changeDateFormat(this.filterForm.value),{pageNo:0,limit:0});this._employeeListService.getEmployees(n).subscribe(function(n){e.tempData=n.data.userList;var t=e.tempData.map(function(e){return{email:e.email,employeeId:e.employeeId,name:e.name,status:e.status,type:e.type}});e.excelService.exportAsExcelFile(t,"EmployeeData")},function(e){})},n.ctorParameters=function(){return[{type:b},{type:f.a},{type:l.ElementRef},{type:w.a},{type:_.a}]},a.__decorate([Object(l.ViewChild)("upload_csv",{static:!1}),a.__metadata("design:type",l.ElementRef)],n.prototype,"myInputVariable",void 0),n=a.__decorate([Object(l.Component)({selector:"app-employee-list",template:t("OA1P"),styles:[t("SUbs")]}),a.__metadata("design:paramtypes",[b,f.a,l.ElementRef,w.a,_.a])],n)}(r.a),D=t("ZYCi"),C=t("FpXt"),E=t("UodH"),F=t("seP3"),S=t("SMsm"),k=t("b716"),M=t("mVsa"),N=t("4epT"),I=t("uGex"),O=t("OkvK"),P=t("v9Dh"),A=t("9sDP"),z=t("RrX5"),j=t("CaoY"),T=t("MzSu"),B=t("gdGC"),H=t("jLZc"),R=t("+7By");t.d(n,"EmployeeListModule",function(){return $});var V=[{path:R.n,component:L}],Y=[F.c,k.b,E.a,v.b,S.a,N.a,O.a,M.a,P.a,I.a],$=function(){function e(){}return e=a.__decorate([Object(l.NgModule)({declarations:[L],imports:[i.c,C.a].concat(Y,[c.n,A.a,z.a,j.a,B.a,T.a,o.a,H.a,D.e.forChild(V)]),providers:[b]})],e)}()},FaG1:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var a={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,password:/^[^\s]+$/,name:/(.|\s)*\S(.|\s)*/,phone:"^[1-9][0-9]*$",price:/(^[0][1-9]+)|([1-9]\d*)+$/,alphaNumeric:"^[a-zA-Z0-9]+$",alphaNumericWithSpace:"^[a-zA-Z0-9 ]+$",alphabetsWithSpace:"^[a-zA-Z ]*$",onlyNumber:"^[0-9]*$",noSpace:/^\S*$/,REGNO:/(^[A-Za-z]{2}(?:[0-9]){2}(?:[A-Za-z]){1,2}([0-9]){4})$/i}},OA1P:function(e,n){e.exports='\x3c!-- <div class="main-content complete-align">\n  <div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n\n    <ul class="breadcrumb">\n      <li>\n        <a href="javascript:void(0)">Home</a>\n      </li>\n      <li>\n        <a href="javascript:void(0)" class="active">Employee</a>\n      </li>\n      <li>\n        <a href="javascript:void(0)" class="active">list</a>\n      </li>\n    </ul>\n    </div>\n  </div>\n  <div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n\n    <div class="col-12 col-lg-6 col-xl">\n        <span style="font-size: 25px; font-weight: 100;">\n          Employee\n        </span>\n    </div>\n</div>\n  </div>\n  <div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n        <ul class="btn_wrapper text-right">\n         \n          <li>\n            <button mat-raised-button (click)="showFilter = !showFilter" type="button" class="action_menu">\n              <mat-icon>filter_list</mat-icon> Filter\n            </button>\n          </li>\n          <li class="action">\n            <button color="primary" class="action_menu" [matMenuTriggerFor]="menu">\n              <mat-icon>more_vert</mat-icon> Action\n            </button>\n  \n            <ul class="actionmenu">\n              <mat-menu #menu="matMenu">\n                <li>\n                  <a href="assets/xls/EmployeeData.xls" class="csv-product">\n                    <button mat-raised-button color="primary">\n                      <mat-icon>arrow_downward</mat-icon> Download Sample XLS\n                    </button>\n                  </a>\n                </li>\n                <li>\n                  <button mat-raised-button color="primary" class="csv-product upload">\n                    <input type="file" #upload_csv (change)="uploadCSV($event)" accept=".xls," class="fileButton" />\n                    <mat-icon>cloud_upload</mat-icon> Upload XLS\n                  </button>\n                  <div class="uploadData">\n                    <label *ngIf="csvFileName">{{ csvFileName }}\n                      <span title="Remove File" (click)="removeCSV()">\n                        <img alt="Remove" src="assets/images/delete.svg" />\n                      </span>\n                    </label>\n                  </div>\n                </li>\n                <li>\n                  <a href="assets/xls/EmployeeData.xls" class="csv-product upload">\n                    <button mat-raised-button color="primary" (click)="downloadEmployee()">\n                      <mat-icon>cloud_download</mat-icon> Download Report\n                  </button>\n                  </a>\n                </li>\n              </mat-menu>\n  \n            </ul>\n          </li>\n  \n          <li>\n            <button mat-raised-button [routerLink]="\'ADD_EMPLOYEE\' | absolutePath" class="action_menu">\n              Add Employee\n            </button>\n          </li>\n\n          <li>\n            <button mat-raised-button [routerLink]="\'ARCHIVED_EMPLOYEE\' | absolutePath" class="action_menu">\n              Blocked\n            </button>\n          </li>\n  \n        \n  \n        </ul>\n    </div>\n  </div>\n \n\n  \n  \n</div>\n\n<div class="white_wrapper filter_wrapper" [class.filter_wrapper_show]="showFilter">\n  <div class="flex_row">\n    <div class="flex_col_sm_6">\n      <app-date-filter [dateObject]="filterObject.registrationDate">\n      </app-date-filter>\n    </div>\n    <div class="flex_col_sm_3">\n      <app-dropdown-filter [dropdown]="filterObject.compLocationName"></app-dropdown-filter>\n    </div>\n\n   \n\n   \n  </div>\n  <div class="flex_row">\n    <div class="flex_col_sm_10 text-center">\n      <ul class="btn_wrapper">\n        <li>\n          <button filter_btn mat-stroked-button [disabled]="disable()" (click)="resetFilter()">\n            Reset\n          </button>\n        </li>\n\n        <li>\n          <button filter_btn mat-raised-button color="primary" [disabled]="disable()" (click)="filter()">\n            Filter\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div >\n\n    <div _ngcontent-vmx-c9="" class="table_wrapper white-card">\n      <div _ngcontent-vmx-c9="" class="table_search">\n        <div _ngcontent-vmx-c9="" class="table_search-box">\n    <input _ngcontent-vmx-c9="" class="table_search-input" id="workersearch" #searchInput (keyup)="setSearch(searchInput.value)"  placeholder="Search" type="text">\n    <img _ngcontent-vmx-c9="" alt="search" class="table_search-icon" src="assets/images/search-24.png">\n  </div>   \n  </div> \n  <table\n    mat-table\n    [dataSource]="employees"\n    matSort\n    (matSortChange)="sortData($event)"\n    class="mat-elevation-z8"\n  >\n    <ng-container matColumnDef="position">\n      <th mat-header-cell *matHeaderCellDef>#</th>\n      <td mat-cell *matCellDef="let element; let i = index">\n        {{ getSerialNumber(i + 1) }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef="empId">\n      <th mat-header-cell *matHeaderCellDef>EMPLOYEE ID</th>\n      <td mat-cell class="td-color-font" *matCellDef="let element">\n        <span class="td-text-wrap">{{ element.employeeId | checkNull }}</span>\n      </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef="name">\n      <th mat-header-cell *matHeaderCellDef>NAME</th>\n      <td mat-cell *matCellDef="let element">\n        <span class="view_details td-text-wrap" [routerLink]="[\'EMPLOYEES\' | absolutePath, element._id]">\n          {{ element.name | checkNull }}\n        </span>\n      </td>\n    </ng-container>\n\n\n\n    <ng-container matColumnDef="email">\n      <th mat-header-cell *matHeaderCellDef>EMAIL</th>\n      <td mat-cell *matCellDef="let element" class="td-color-font" title="{{ element.email }}">\n        <span>{{ element.email | checkNull }}</span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef="companyLocationName">\n      <th mat-header-cell *matHeaderCellDef>COMPANY LOCATION</th>\n      <td mat-cell class="td-color-font" *matCellDef="let element">\n        {{ element.companyLocationName | checkNull }}\n      </td>\n    </ng-container>\n\n   \n    <ng-container matColumnDef="vehicles">\n      <th mat-header-cell *matHeaderCellDef>VEHICLES</th>\n      <td mat-cell *matCellDef="let element">\n        <span *ngIf="element.vehicleList.length > 1" class="td-color-font">\n          {{ element.vehicleList[0].modal+" ("+element.vehicleList[0].regNo + ") + "+ (element.vehicleList.length - 1)+"..." | checkNull }}\n        </span>\n        <span *ngIf="element.vehicleList.length == 1" class="td-color-font">\n          {{ element.vehicleList[0].modal+ " ("+element.vehicleList[0].regNo + ") " | checkNull }}\n        </span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef="created">\n      <th mat-header-cell *matHeaderCellDef>\n        <span [ngClass]="\n            isFilterApplied && filterForm.value.fromDate ? \'appliedFilter\' : \'\'\n          ">REGISTRATION DATE\n        </span>\n      </th>\n      <td mat-cell *matCellDef="let element">\n        <span matTooltip="Filters applied" class="td-color-font" matTooltipPosition="below">{{\n          element.created | customDate\n        }}</span>\n      </td>\n    </ng-container>\n\n   \n    <ng-container matColumnDef="action">\n      <th mat-header-cell *matHeaderCellDef>ACTION</th>\n      <td mat-cell *matCellDef="let element">\n        <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu="matMenu" xPosition="before">\n          <button mat-menu-item [routerLink]="[\'EDIT_EMPLOYEE\' | absolutePath, element._id]">\n            <mat-icon matTooltip="Edit">edit</mat-icon> Edit\n          </button>\n          <button mat-menu-item [ngClass]="element.status === \'blocked\' ? \'ban\' : \'noban\'" (click)="\n              changeStatus(\n                element.status === \'blocked\' ? \'unblocked\' : \'blocked\',\n                element._id\n              )\n            ">\n            <mat-icon matTooltip="{{\n                element.status === \'blocked\' ? \'Unblock\' : \'Block\'\n              }}">\n              {{ element.status === "blocked" ? "block" : "block" }}</mat-icon>\n            {{ element.status === "blocked" ? "un-block" : "Block" }}\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n  </table>\n    </div>\n\n  <div class="white_wrapper" *ngIf="total === 0">\n    <h2 class="not-found">No Employee Found</h2>\n  </div>\n  <div class="white_wrapper" *ngIf="employees.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page - 1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n      (page)="changePage($event)">\n    </mat-paginator>\n  </div>\n</div> --\x3e\n<div class="main-content complete-align">\n  <div class="row">\n    <div class="col-12 col-lg-6 col-xl">\n      <ul class="breadcrumb">\n        <li>\n          <a href="#/admin/dashboard">Home</a>\n        </li>\n        <li>\n          <a href="javascript:void(0)" class="active">Employees</a>\n        </li>\n        <li>\n          <a href="javascript:void(0)" class="active">List</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 5px">\n    <div class="col-12 col-lg-6 col-xl">\n        <label  style="font-size: 25px !important;font-weight: 100 !important;">\n          Employees\n        </label>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 10px">\n    <div class="col-12 col-lg-6 col-xl-7">\n      <div class="row">\n        <div class="col-12 col-lg-6 col-xl-2" >\n          <li>\n            <button mat-raised-button [routerLink]="\'ADD_EMPLOYEE\' | absolutePath" class="action_menu">\n              Add Employee\n            </button>\n          </li>\n        </div>\n        <div class="col-12 col-lg-6 col-xl-2" style="margin-left: 30px;" >\n          <li>\n            <button mat-raised-button [routerLink]="\'ARCHIVED_EMPLOYEE\' | absolutePath" class="action_menu">\n              Blocked\n            </button>\n          </li>\n        </div>\n        <div  class="col-12 col-lg-6 col-xl-3">\n          <li >\n            <button mat-raised-button color="primary" class="action_menu" [matMenuTriggerFor]="menu">\n              <mat-icon>more_vert</mat-icon>   Action\n            </button>\n    \n            <ul>\n              <mat-menu #menu="matMenu">\n                <li>\n                  <a href="assets/xls/EmployeeData.xls" class="csv-product">\n                    <button mat-raised-button color="primary">\n                      <mat-icon>arrow_downward</mat-icon> Download Sample XLS\n                    </button>\n                  </a>\n                </li>\n                <li>\n                  <button mat-raised-button color="primary" class="csv-product upload">\n                    <input type="file" #upload_csv (change)="uploadCSV($event)" accept=".xls," class="fileButton" />\n                    <mat-icon>cloud_upload</mat-icon> Upload XLS\n                  </button>\n                  <div class="uploadData">\n                    <label *ngIf="csvFileName">{{ csvFileName }}\n                      <span title="Remove File" (click)="removeCSV()">\n                        <img alt="Remove" src="assets/images/delete.svg" />\n                      </span>\n                    </label>\n                  </div>\n                </li>\n                <li>\n                  <a href="assets/xls/EmployeeData.xls" class="csv-product upload">\n                    <button mat-raised-button color="primary" (click)="downloadEmployee()">\n                      <mat-icon>cloud_download</mat-icon> Download Report\n                  </button>\n                  </a>\n                </li>\n              </mat-menu>\n    \n            </ul>\n          </li>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="row" style="margin-top: 10px">\n    <div class="col-12 col-lg-6 col-xl">\n\n      <div _ngcontent-vmx-c9="" class="white-card" style="padding-top: 2%;">\n        <div class="row">\n          <div class="col-12 col-lg-6 col-xl-4">\n            <app-date-filter [dateObject]="filterObject.registrationDate">\n            </app-date-filter>\n          </div>\n          <div class="col-12 col-lg-6 col-xl-2">\n            <app-dropdown-filter [dropdown]="filterObject.compLocationName"></app-dropdown-filter>\n          </div>\n          <div  class="col-12 col-lg-6 col-xl-1">\n            <button style="margin-left: 15%;" filter_btn mat-stroked-button [disabled]="disable()" (click)="resetFilter()">\n              Reset\n            </button>\n          </div>\n          <div  class="col-12 col-lg-6 col-xl-1">\n            <button filter_btn mat-raised-button color="primary" [disabled]="disable()" (click)="filter()">\n              Filter\n            </button>\n          </div>\n          <div class="col-12 col-lg-6 col-xl-4">\n            <div _ngcontent-vmx-c9="" class="table_search" style=" padding-right: 4%">\n              <div _ngcontent-vmx-c9="" class="table_search-box" >\n                <input _ngcontent-vmx-c9="" class="table_search-input" id="workersearch" #searchInput (keyup)="setSearch(searchInput.value)"  placeholder="Search" type="text">\n                <img _ngcontent-vmx-c9="" alt="search" class="table_search-icon" src="assets/images/search-24.png">\n              </div>   \n            </div> \n          </div>\n\n        </div>\n    <table\n      mat-table\n      [dataSource]="employees"\n      matSort\n      (matSortChange)="sortData($event)"\n      class="mat-elevation-z8"\n      >\n      <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef="let element; let i = index">\n          {{ getSerialNumber(i + 1) }}\n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef="empId">\n        <th mat-header-cell *matHeaderCellDef>EMPLOYEE ID</th>\n        <td mat-cell class="td-color-font" *matCellDef="let element">\n          <span class="td-text-wrap">{{ element.employeeId | checkNull }}</span>\n        </td>\n      </ng-container>\n  \n  \n      <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef>NAME</th>\n        <td mat-cell *matCellDef="let element">\n          <span class="view_details_dash td-text-wrap" [routerLink]="[\'EMPLOYEES\' | absolutePath, element._id]">\n            {{ element.name | checkNull }}\n          </span>\n        </td>\n      </ng-container>\n  \n  \n  \n      <ng-container matColumnDef="email">\n        <th mat-header-cell *matHeaderCellDef>EMAIL</th>\n        <td mat-cell *matCellDef="let element" class="td-color-font" title="{{ element.email }}">\n          <span class="td-text-wrap">{{ element.email | checkNull }}</span>\n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef="companyLocationName">\n        <th mat-header-cell *matHeaderCellDef>COMPANY LOCATION</th>\n        <td mat-cell class="td-color-font" *matCellDef="let element">\n          {{ element.companyLocationName | checkNull }}\n        </td>\n      </ng-container>\n  \n     \n      <ng-container matColumnDef="vehicles">\n        <th mat-header-cell *matHeaderCellDef>VEHICLES</th>\n        <td mat-cell *matCellDef="let element">\n          <span *ngIf="element.vehicleList.length > 1" class="td-color-font">\n            {{ element.vehicleList[0].modal+" ("+element.vehicleList[0].regNo + ") + "+ (element.vehicleList.length - 1)+"..." | checkNull }}\n          </span>\n          <span *ngIf="element.vehicleList.length == 1" class="td-color-font">\n            {{ element.vehicleList[0].modal+ " ("+element.vehicleList[0].regNo + ") " | checkNull }}\n          </span>\n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef="created">\n        <th mat-header-cell *matHeaderCellDef>\n          <span [ngClass]="\n              isFilterApplied && filterForm.value.fromDate ? \'appliedFilter\' : \'\'\n            ">REGISTRATION DATE\n          </span>\n        </th>\n        <td mat-cell *matCellDef="let element">\n          <span matTooltip="Filters applied" class="td-color-font" matTooltipPosition="below">{{\n            element.created | customDate\n          }}</span>\n        </td>\n      </ng-container>\n  \n     \n      <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef>ACTION</th>\n        <td mat-cell *matCellDef="let element">\n          <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu="matMenu" xPosition="before">\n            <button mat-menu-item [routerLink]="[\'EDIT_EMPLOYEE\' | absolutePath, element._id]">\n              <mat-icon matTooltip="Edit">edit</mat-icon> Edit\n            </button>\n            <button mat-menu-item [ngClass]="element.status === \'blocked\' ? \'ban\' : \'noban\'" (click)="\n                changeStatus(\n                  element.status === \'blocked\' ? \'unblocked\' : \'blocked\',\n                  element._id\n                )\n              ">\n              <mat-icon matTooltip="{{\n                  element.status === \'blocked\' ? \'Unblock\' : \'Block\'\n                }}">\n                {{ element.status === "blocked" ? "block" : "block" }}</mat-icon>\n              {{ element.status === "blocked" ? "un-block" : "Block" }}\n            </button>\n          </mat-menu>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n      <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n    </table>\n      </div>\n  \n    <div class="white_wrapper" *ngIf="total === 0">\n      <h2 class="not-found">No Employee Found</h2>\n    </div>\n    <div class="white_wrapper" *ngIf="employees.data.length">\n      <mat-paginator [length]="total" [pageIndex]="page - 1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n        (page)="changePage($event)">\n      </mat-paginator>\n    </div>\n  </div>\n  </div>\n</div>'},SUbs:function(e,n){e.exports='@charset "UTF-8";\n.flex_row {\n  display: flex;\n  margin: 0 -10px;\n  align-items: center;\n}\n.breadcrumb {\n  width: 100%;\n  padding: 0;\n}\n.breadcrumb li {\n  display: inline-block;\n}\n.breadcrumb li a {\n  color: #006CB8;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n}\n.breadcrumb li a:before {\n  padding: 0 10px;\n  color: #B7BEC1;\n  content: "/ ";\n  margin: auto;\n}\n.breadcrumb li a:after {\n  content: "/\xa0";\n  padding: 0 2px;\n  color: #A2ABAE;\n}\n.breadcrumb li a.active {\n  color: #262c2d;\n  cursor: default;\n}\n.breadcrumb li a.active:after {\n  display: none;\n}\n.breadcrumb li:first-child a:before, .breadcrumb li:first-child a:after {\n  display: none;\n}\n.white_wrapper.action {\n  overflow: inherit !important;\n  position: relative;\n}\n.actionmenu {\n  margin-top: 10px;\n  z-index: 9999;\n  border: 1px solid #e0e0e0;\n  position: absolute;\n  background: #fff;\n  top: 30px;\n  right: 0px;\n}\n.actionmenu li {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  position: relative;\n  flex-direction: row;\n}\n.actionmenu li input {\n  width: 100%;\n}\n.csv-product {\n  background: transparent !important;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d !important;\n  width: 100%;\n  justify-content: flex-start;\n  display: flex;\n  font-family: "Segoe UI";\n  font-size: 13px;\n  position: relative;\n}\n.csv-product .mat-button-wrapper {\n  margin: 0;\n}\n.csv-product button {\n  background: transparent !important;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d !important;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  font-family: "Segoe UI";\n  font-size: 13px;\n}\n.csv-product button .material-icons {\n  font-size: 19px;\n}\n.csv-product.upload input {\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.uploadcsv {\n  background: transparent;\n  border: 0;\n  box-shadow: none;\n  color: #262c2d;\n  position: relative;\n  border-bottom: 1px solid #e0e0e0;\n}\n.uploadcsv input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.rowFilterBox {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\napp-search-filter {\n  width: 60%;\n}\n.uploadData {\n  text-align: center;\n}\n.uploadData label {\n  font-size: 13px;\n}\n.uploadData img {\n  width: 15px;\n  height: 15px;\n}\n.archieveData li {\n  margin-left: 10px;\n}\n.archieveData li a {\n  font-size: 14px;\n  font-weight: 400;\n  text-decoration: underline;\n  color: #006CB8;\n  font-family: "Segoe UI";\n  white-space: nowrap;\n}\n:host ::ng-deep .csv-product .mat-button-wrapper {\n  margin: 0;\n}\n:host ::ng-deep .csv-product button .material-icons {\n  font-size: 19px;\n}\n:host ::ng-deep .csv-product .material-icons {\n  font-size: 19px;\n}\n:host ::ng-deep .searchWrapper {\n  width: 100% !important;\n}\n:host ::ng-deep .btn_wrapper li {\n  padding: 0;\n}\n:host ::ng-deep .btn_wrapper li.action button.mat-raised-button.mat-primary {\n  background-color: transparent;\n  color: #091e42;\n  border: 1px solid #c0c2c2;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li button {\n  transition: all 0.5s ease;\n  -webkit-transition: all 0.5s ease;\n  -moz-transition: all 0.5s ease;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li button.mat-raised-button.mat-primary {\n  box-shadow: none;\n  border: 0;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li:hover {\n  background: #e8e8e8 !important;\n}\n:host ::ng-deep .btn_wrapper li .actionmenu li:first-child button.mat-raised-button.mat-primary {\n  border-bottom: 1px solid #e0e0e0;\n}\n:host ::ng-deep .mat-menu-content {\n  height: auto;\n}\nbutton.action_menu {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  outline: 0;\n  min-width: 64px;\n  line-height: 36px;\n  padding: 0 16px;\n  border-radius: 4px;\n  overflow: visible;\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n  transition: background 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: transparent;\n  color: #091e42;\n  border: 2px solid #0069FF;\n  display: flex;\n  align-items: center;\n}\nbutton.action_menu .mat-icon {\n  position: relative;\n  right: 10px;\n}\n.filter-count {\n  cursor: default;\n  pointer-events: none;\n  color: #636F73;\n  font-size: 13px;\n}\nth {\n  font-family: "avenir-medium";\n  color: black !important;\n  opacity: 36% !important;\n  font-size: 10px !important;\n}\n.td-color-font, td, .td-text-wrap {\n  font-family: avenir-book !important;\n  color: black !important;\n  opacity: 88% !important;\n  font-size: 14px !important;\n}\n.table_search-input {\n  font-family: "avenir-medium";\n  font-size: 1rem;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  border: none;\n  color: #000;\n}\n.table_search-box {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #e6ebf0;\n  padding: 0.5rem;\n}\n.table_wrapper {\n  padding: 2.4rem;\n}\n.white-card {\n  border-radius: 4px;\n  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.06);\n  background-color: #ffffff;\n}\n.table_search {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 0 1rem 0;\n}\n::-webkit-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n::-moz-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n::-ms-input-placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: #CBD3CF;\n  opacity: 1;\n  /* Firefox */\n}\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: #CBD3CF;\n}\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: #CBD3CF;\n}\n.complete-align {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n.text-muted {\n  color: #7a7878 !important;\n}\n.col-2 {\n  padding-left: 0 !important;\n}\n.view_details_dash {\n  color: #006CB8 !important;\n  cursor: pointer !important;\n}\n.action_menu {\n  background-color: white !important;\n  border: 1px solid #888 !important;\n}'},buKM:function(e,n,t){"use strict";var a=t("mrSG"),o=t("CcnG"),l=t("gIcY"),i=t("FaG1"),r={emailMaxLength:100,passwordMinLength:8,passwordMaxLength:20,nameMinLength:3,nameMaxLength:100,phoneMinLength:10,phoneMaxLength:10,locationMinLength:3,locationMaxLength:1e3,priceMinLength:1,priceMaxLength:10,minSeat:2,maxSeat:20,numberMinLength:1,numberMaxLength:10,regNoMaxLength:10,regNoMinLength:9};t.d(n,"a",function(){return s});var s=function(){function e(){this.VALIDATION={name:[l.o.pattern(i.a.alphabetsWithSpace),l.o.minLength(r.nameMinLength),l.o.maxLength(r.nameMaxLength)],id:[l.o.pattern(i.a.noSpace),l.o.minLength(r.nameMinLength),l.o.maxLength(r.nameMaxLength)],profileName:[l.o.pattern(i.a.name),l.o.minLength(r.nameMinLength),l.o.maxLength(r.nameMaxLength)],alphabetic:[l.o.pattern(i.a.alphabetsWithSpace),l.o.minLength(r.nameMinLength),l.o.maxLength(r.nameMaxLength)],alphaNumeric:[l.o.pattern(i.a.alphaNumericWithSpace),l.o.minLength(r.nameMinLength),l.o.maxLength(r.nameMaxLength)],number:[l.o.pattern(i.a.onlyNumber),l.o.minLength(r.numberMinLength),l.o.maxLength(r.numberMaxLength)],price:[l.o.pattern(i.a.price),l.o.minLength(r.priceMinLength),l.o.maxLength(r.priceMaxLength),l.o.min(0)],seatingCapacity:[l.o.required,l.o.pattern(i.a.phone),l.o.min(r.minSeat),l.o.max(r.maxSeat)],email:[l.o.pattern(i.a.email),l.o.maxLength(r.emailMaxLength)],description:[l.o.pattern(i.a.name),l.o.minLength(r.locationMinLength),l.o.maxLength(r.locationMaxLength)],password:[l.o.pattern(i.a.password),l.o.minLength(r.passwordMinLength),l.o.maxLength(r.passwordMaxLength)],phone:[l.o.required,l.o.pattern(i.a.phone),l.o.minLength(r.phoneMinLength),l.o.maxLength(r.phoneMaxLength)],crfLimitMonth:[l.o.required,l.o.pattern(i.a.onlyNumber)],phoneManual:[l.o.pattern(i.a.phone),l.o.maxLength(r.phoneMaxLength)],dropdown:[],checkbox:[],address:[l.o.required],longitude:[l.o.required],latitude:[l.o.required],startShift:[l.o.required],endShift:[l.o.required],googleAddress:[l.o.required,l.o.minLength(r.nameMinLength),l.o.maxLength(r.nameMaxLength)],noSpace:[l.o.required,l.o.pattern(i.a.noSpace)],date:[],regNo:[l.o.required,l.o.minLength(r.regNoMinLength),l.o.maxLength(r.regNoMaxLength)]}}return e.prototype.matchPassword=function(e){var n=e.get("password").value,t=e.get("confirmPassword").value;n&&t&&(e.get("confirmPassword").setErrors(null),n!==t?e.get("confirmPassword").setErrors({matchPassword:!0}):n===t&&e.get("confirmPassword").errors&&(delete e.get("confirmPassword").errors.matchPassword,0===Object.keys(e.get("confirmPassword").errors).length&&e.get("confirmPassword").setErrors(null)))},e.prototype.getControl=function(e,n){void 0===n&&(n=!0);var t=this.VALIDATION[e].slice();return n&&("checkbox"===e?t.splice(0,0,l.o.requiredTrue):t.splice(0,0,l.o.required)),["",l.o.compose(t)]},e.prototype.getFilterFormControls=function(e){for(var n={},t=0,a=e;t<a.length;t++){n[a[t]]=[null]}return n},e=a.__decorate([Object(o.Injectable)({providedIn:"root"}),a.__metadata("design:paramtypes",[])],e)}()}}]);